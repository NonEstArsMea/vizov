document.addEventListener('DOMContentLoaded', function() {
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –æ—Å–Ω–æ–≤–Ω–æ–π –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    const toggleButtons = document.querySelectorAll('.toggle-info-btn');

    toggleButtons.forEach(btn => {
        btn.addEventListener('click', function() {
            const bookingCard = this.closest('.booking-card');
            const details = bookingCard.querySelector('.booking-details');
            const info = bookingCard.querySelector('.booking-info');
            const toggleIcon = this.querySelector('.toggle-icon');
            const toggleText = this.querySelector('.toggle-text');

            const isShowingDetails = details.classList.contains('active');

            // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
            animateButton(this);

            if (isShowingDetails) {
                // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                switchToInfo(details, info, toggleIcon, toggleText);
            } else {
                // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                switchToDetails(details, info, toggleIcon, toggleText);
            }
        });
    });
    

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    function switchToInfo(details, info, toggleIcon, toggleText) {
        // –ü–ª–∞–≤–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
        details.style.opacity = '0';
        details.style.transform = 'translateY(-10px)';

        setTimeout(() => {
            details.classList.remove('active');

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            info.classList.add('active');
            setTimeout(() => {
                info.style.opacity = '1';
                info.style.transform = 'translateY(0)';
            }, 50);

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
            toggleIcon.textContent = 'üìã';
            toggleText.textContent = '–û—Å–Ω–æ–≤–Ω–æ–µ';
        }, 200);
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    function switchToDetails(details, info, toggleIcon, toggleText) {
        // –ü–ª–∞–≤–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        info.style.opacity = '0';
        info.style.transform = 'translateY(-10px)';

        setTimeout(() => {
            info.classList.remove('active');

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
            details.classList.add('active');
            setTimeout(() => {
                details.style.opacity = '1';
                details.style.transform = 'translateY(0)';
            }, 50);

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
            toggleIcon.textContent = 'üìñ';
            toggleText.textContent = '–ü–æ–¥—Ä–æ–±–Ω–µ–µ';
        }, 200);
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
    function animateButton(button) {
        button.style.transform = 'scale(0.95)';
        setTimeout(() => {
            button.style.transform = 'scale(1)';
        }, 150);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const cancelButtons = document.querySelectorAll('.cancel-btn');
    const cancelModal = document.getElementById('cancelModal');
    const modalClose = cancelModal.querySelector('.modal-close');
    const cancelNo = document.getElementById('cancelNo');
    const cancelYes = document.getElementById('cancelYes');

    let currentBooking = null;

    cancelButtons.forEach(btn => {
        btn.addEventListener('click', function() {
            const bookingId = this.getAttribute('data-booking-id');
            const bookingCard = this.closest('.booking-card');
            const title = bookingCard.querySelector('.booking-title').textContent;
            const dateElement = bookingCard.querySelector('.detail-value');
            const date = dateElement ? dateElement.textContent : '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';

            currentBooking = bookingId;
            document.getElementById('modalBookingTitle').textContent = title;
            document.getElementById('modalBookingDate').textContent = date;

            showModal(cancelModal);
        });
    });

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    function showModal(modal) {
        modal.style.display = 'flex';
        setTimeout(() => {
            modal.classList.add('active');
        }, 10);
    }

    // –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    function hideModal(modal) {
        modal.classList.remove('active');
        setTimeout(() => {
            modal.style.display = 'none';
        }, 300);
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeCancelModal() {
        hideModal(cancelModal);
        currentBooking = null;
        document.getElementById('cancelReason').value = '';
        document.getElementById('cancelComment').value = '';
    }

    modalClose.addEventListener('click', closeCancelModal);
    cancelNo.addEventListener('click', closeCancelModal);

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    cancelYes.addEventListener('click', function() {
        if (currentBooking) {
            const reason = document.getElementById('cancelReason').value;
            const comment = document.getElementById('cancelComment').value;

            // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É
            simulateCancelBooking(currentBooking, reason, comment);
        }
    });

    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    function simulateCancelBooking(bookingId, reason, comment) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const cancelYes = document.getElementById('cancelYes');
        const originalText = cancelYes.innerHTML;
        cancelYes.innerHTML = '‚è≥ –û—Ç–º–µ–Ω—è–µ–º...';
        cancelYes.disabled = true;

        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
        setTimeout(() => {
            const bookingCard = document.querySelector(`[data-booking-id="${bookingId}"]`).closest('.booking-card');

            if (bookingCard) {
                // –ê–Ω–∏–º–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
                animateCardRemoval(bookingCard, () => {
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    updateStats();

                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                    closeCancelModal();

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                    showNotification('–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!', 'success');
                });
            }

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            cancelYes.innerHTML = originalText;
            cancelYes.disabled = false;

        }, 1500);
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
    function animateCardRemoval(card, callback) {
        card.style.transform = 'scale(0.95)';
        card.style.opacity = '0.5';

        setTimeout(() => {
            card.style.transition = 'all 0.5s ease';
            card.style.transform = 'translateX(100%) rotate(5deg)';
            card.style.opacity = '0';

            setTimeout(() => {
                card.remove();
                if (callback) callback();
            }, 500);
        }, 200);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    function updateStats() {
        const bookings = document.querySelectorAll('.booking-card');
        const totalBookings = bookings.length;
        const confirmedBookings = Array.from(bookings).filter(card =>
            card.querySelector('.booking-badge').textContent.includes('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ')
        ).length;
        const soonBookings = Array.from(bookings).filter(card =>
            card.querySelector('.booking-urgency').textContent.includes('–°–∫–æ—Ä–æ')
        ).length;

        // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–∏—Ñ—Ä
        animateCounter('.stat-number:nth-child(1)', totalBookings);
        animateCounter('.stat-number:nth-child(2)', confirmedBookings);
        animateCounter('.stat-number:nth-child(3)', soonBookings);

        // –ï—Å–ª–∏ –±—Ä–æ–Ω–µ–π –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (totalBookings === 0) {
            setTimeout(() => {
                showEmptyState();
            }, 1000);
        }
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞
    function animateCounter(selector, targetValue) {
        const element = document.querySelector(selector);
        if (!element) return;

        const currentValue = parseInt(element.textContent) || 0;
        const duration = 500;
        const stepTime = 50;
        const steps = duration / stepTime;
        const increment = (targetValue - currentValue) / steps;
        let currentStep = 0;

        const timer = setInterval(() => {
            currentStep++;
            const value = Math.round(currentValue + (increment * currentStep));
            element.textContent = value;

            if (currentStep >= steps) {
                element.textContent = targetValue;
                clearInterval(timer);
            }
        }, stepTime);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    function showEmptyState() {
        const bookingsGrid = document.querySelector('.bookings-grid');
        const bookingsStats = document.querySelector('.bookings-stats');

        if (bookingsGrid && bookingsStats) {
            bookingsGrid.style.display = 'none';
            bookingsStats.style.display = 'none';

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            const emptyState = document.querySelector('.empty-bookings');
            if (emptyState) {
                emptyState.style.display = 'block';
                emptyState.style.animation = 'fadeInUp 0.8s ease';
            }
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <span class="notification-icon">${getNotificationIcon(type)}</span>
            <span class="notification-text">${message}</span>
        `;

        // –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${getNotificationColor(type)};
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.2);
            z-index: 10000;
            display: flex;
            align-items: center;
            gap: 10px;
            transform: translateX(100%);
            transition: transform 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        `;

        document.body.appendChild(notification);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 10);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    // –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function getNotificationIcon(type) {
        const icons = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: '‚ÑπÔ∏è'
        };
        return icons[type] || icons.info;
    }

    // –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function getNotificationColor(type) {
        const colors = {
            success: 'rgba(0, 184, 148, 0.9)',
            error: 'rgba(255, 71, 87, 0.9)',
            warning: 'rgba(255, 165, 0, 0.9)',
            info: 'rgba(255, 94, 0, 0.9)'
        };
        return colors[type] || colors.info;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
    const shareButtons = document.querySelectorAll('.share-btn');
    shareButtons.forEach(btn => {
        btn.addEventListener('click', function() {
            const bookingCard = this.closest('.booking-card');
            const title = bookingCard.querySelector('.booking-title').textContent;
            const dateElement = bookingCard.querySelector('.detail-value');
            const date = dateElement ? dateElement.textContent : '';

            shareBooking(title, date, this);
        });
    });

    // –§—É–Ω–∫—Ü–∏—è —à–∞—Ä–∏–Ω–≥–∞
    function shareBooking(title, date, button) {
        const shareData = {
            title: '–ú–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ - –í—ã–∑–æ–≤ 01',
            text: `–Ø –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ "${title}" ${date}`,
            url: window.location.href
        };

        if (navigator.share) {
            navigator.share(shareData)
                .then(() => {
                    showNotification('–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å!', 'success');
                })
                .catch(() => {
                    fallbackShare(shareData.text, button);
                });
        } else {
            fallbackShare(shareData.text, button);
        }
    }

    // Fallback –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
    function fallbackShare(text, button) {
        navigator.clipboard.writeText(text).then(() => {
            const originalHTML = button.innerHTML;
            button.innerHTML = '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!';
            button.style.background = 'rgba(0, 184, 148, 0.2)';
            button.style.color = '#00b894';
            button.style.border = '1px solid rgba(0, 184, 148, 0.5)';

            setTimeout(() => {
                button.innerHTML = originalHTML;
                button.style.background = '';
                button.style.color = '';
                button.style.border = '';
            }, 2000);
        }).catch(() => {
            showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 'error');
        });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ–≥–æ
    cancelModal.addEventListener('click', function(e) {
        if (e.target === this) {
            closeCancelModal();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à–∏ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && cancelModal.classList.contains('active')) {
            closeCancelModal();
        }
    });

    document.addEventListener('DOMContentLoaded', function() {
        // –£–ª—É—á—à–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
        const cancelReason = document.getElementById('cancelReason');
        if (cancelReason) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
            cancelReason.addEventListener('focus', function() {
                this.style.background = 'rgba(40, 40, 40, 0.9)';
            });

            cancelReason.addEventListener('blur', function() {
                this.style.background = 'rgba(30, 30, 30, 0.9)';
            });
        }

        // –£–ª—É—á—à–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
        const cancelComment = document.getElementById('cancelComment');
        if (cancelComment) {
            cancelComment.addEventListener('focus', function() {
                this.style.background = 'rgba(40, 40, 40, 0.9)';
            });

            cancelComment.addEventListener('blur', function() {
                this.style.background = 'rgba(30, 30, 30, 0.9)';
            });
        }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
    function initializeProgressBars() {
        const progressBars = document.querySelectorAll('.progress-fill');
        progressBars.forEach(bar => {
            const targetWidth = bar.style.width;
            bar.style.width = '0%';

            setTimeout(() => {
                bar.style.transition = 'width 1s ease-in-out';
                bar.style.width = targetWidth;
            }, 500);
        });
    }

    // –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    initializeProgressBars();
});